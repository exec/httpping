name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: write
  metadata: read

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: httpping-linux-amd64
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: httpping-linux-arm64
          - target: x86_64-apple-darwin
            os: macos-latest
            name: httpping-macos-amd64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: httpping-macos-arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        if: contains(matrix.target, 'linux') && matrix.target != 'x86_64-unknown-linux-gnu'
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: |
          if [[ "${{ matrix.target }}" == *linux* && "${{ matrix.target }}" != "x86_64-unknown-linux-gnu" ]]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Package
        run: |
          mkdir -p dist
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/httpping.exe dist/
            cd dist && zip -r ../httpping-${{ matrix.name }}.zip .
          else
            cp target/${{ matrix.target }}/release/httpping dist/
            chmod +x dist/httpping
            cd dist && tar -czf ../httpping-${{ matrix.name }}.tar.gz .
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            httpping-${{ matrix.name }}.tar.gz
            httpping-${{ matrix.name }}.zip
          if-no-files-found: ignore

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            httpping-*.tar.gz
            httpping-*.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew:
    name: Update Homebrew Tap
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Update Homebrew Tap
        uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: httpping
          homebrew-tap: exec/homebrew-tap
          base-branch: main
          download-url: https://github.com/exec/httpping/archive/refs/tags/${{ github.ref_name }}.tar.gz
          commit-message: |
            {{formulaName}} {{version}}

            Created by https://github.com/mislav/bump-homebrew-formula-action
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}